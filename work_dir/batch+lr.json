{"env_info": "sys.platform: linux\nPython: 3.7.7 (default, May  7 2020, 21:25:33) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.6.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.1 Product Build 20200208 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7.0\nOpenCV: 4.5.1\nMMCV: 1.2.6\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMDetection: 2.9.0+4680122", "config": "model = dict(\n    type='FasterRCNN',\n    pretrained='open-mmlab://detectron2/resnet50_caffe',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe'),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=3,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_across_levels=False,\n            nms_pre=2000,\n            nms_post=1000,\n            max_num=1000,\n            nms_thr=0.7,\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_across_levels=False,\n            nms_pre=1000,\n            nms_post=1000,\n            max_num=1000,\n            nms_thr=0.7,\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'KittiDataset'\ndata_root = 'data/kitti/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=2,\n    train=dict(\n        type='KittiDataset',\n        ann_file='data/kitti/train.txt',\n        img_prefix='data/kitti/training/image_2',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='KittiDataset',\n        ann_file='data/kitti/val.txt',\n        img_prefix='data/kitti/training/image_2',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='KittiDataset',\n        ann_file='data/kitti/train.txt',\n        img_prefix='data/kitti/training/image_2',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=12, metric='mAP')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup=None,\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\ntotal_epochs = 12\ncheckpoint_config = dict(interval=12)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = 'work_dir/'\ngpu_ids = range(0, 4)\n", "seed": null, "exp_name": "faster_rcnn_r50_rpn.py"}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.81233, "loss_rpn_cls": 0.03512, "loss_rpn_bbox": 0.02354, "loss_cls": 0.49188, "acc": 81.12061, "loss_bbox": 0.43517, "loss": 0.98571, "time": 1.42684}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04537, "loss_rpn_cls": 0.0261, "loss_rpn_bbox": 0.02229, "loss_cls": 0.22438, "acc": 92.26379, "loss_bbox": 0.33785, "loss": 0.61062, "time": 0.59321}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04611, "loss_rpn_cls": 0.02133, "loss_rpn_bbox": 0.01855, "loss_cls": 0.1758, "acc": 93.58643, "loss_bbox": 0.26519, "loss": 0.48087, "time": 0.59686}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04531, "loss_rpn_cls": 0.01902, "loss_rpn_bbox": 0.01909, "loss_cls": 0.15044, "acc": 94.39758, "loss_bbox": 0.24753, "loss": 0.43608, "time": 0.60844}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04487, "loss_rpn_cls": 0.02053, "loss_rpn_bbox": 0.01753, "loss_cls": 0.13593, "acc": 94.9707, "loss_bbox": 0.23627, "loss": 0.41026, "time": 0.60068}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04551, "loss_rpn_cls": 0.01743, "loss_rpn_bbox": 0.01785, "loss_cls": 0.15243, "acc": 94.39209, "loss_bbox": 0.25908, "loss": 0.4468, "time": 0.61741}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04565, "loss_rpn_cls": 0.01375, "loss_rpn_bbox": 0.01614, "loss_cls": 0.12736, "acc": 95.24963, "loss_bbox": 0.21996, "loss": 0.37721, "time": 0.61539}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.0497, "loss_rpn_cls": 0.0134, "loss_rpn_bbox": 0.01804, "loss_cls": 0.13498, "acc": 94.86206, "loss_bbox": 0.23448, "loss": 0.40091, "time": 0.61008}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04669, "loss_rpn_cls": 0.01237, "loss_rpn_bbox": 0.0176, "loss_cls": 0.13749, "acc": 94.60938, "loss_bbox": 0.24106, "loss": 0.40852, "time": 0.60587}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04677, "loss_rpn_cls": 0.01297, "loss_rpn_bbox": 0.01774, "loss_cls": 0.13855, "acc": 94.58801, "loss_bbox": 0.23819, "loss": 0.40745, "time": 0.60891}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04761, "loss_rpn_cls": 0.01364, "loss_rpn_bbox": 0.01698, "loss_cls": 0.12579, "acc": 95.19653, "loss_bbox": 0.21381, "loss": 0.37022, "time": 0.60483}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.78666, "loss_rpn_cls": 0.01103, "loss_rpn_bbox": 0.0172, "loss_cls": 0.12887, "acc": 95.07324, "loss_bbox": 0.21044, "loss": 0.36753, "time": 1.35762}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04465, "loss_rpn_cls": 0.00903, "loss_rpn_bbox": 0.01631, "loss_cls": 0.11656, "acc": 95.49194, "loss_bbox": 0.20565, "loss": 0.34755, "time": 0.60765}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04849, "loss_rpn_cls": 0.00983, "loss_rpn_bbox": 0.01609, "loss_cls": 0.11745, "acc": 95.42847, "loss_bbox": 0.19589, "loss": 0.33925, "time": 0.61131}
{"mode": "train", "epoch": 2, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04728, "loss_rpn_cls": 0.00851, "loss_rpn_bbox": 0.01628, "loss_cls": 0.11729, "acc": 95.36621, "loss_bbox": 0.20442, "loss": 0.3465, "time": 0.61406}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04742, "loss_rpn_cls": 0.00815, "loss_rpn_bbox": 0.01415, "loss_cls": 0.1054, "acc": 95.79834, "loss_bbox": 0.18774, "loss": 0.31544, "time": 0.61307}
{"mode": "train", "epoch": 2, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.0484, "loss_rpn_cls": 0.00761, "loss_rpn_bbox": 0.01489, "loss_cls": 0.11272, "acc": 95.60547, "loss_bbox": 0.19097, "loss": 0.32619, "time": 0.61644}
{"mode": "train", "epoch": 2, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04696, "loss_rpn_cls": 0.01027, "loss_rpn_bbox": 0.01677, "loss_cls": 0.12374, "acc": 95.29297, "loss_bbox": 0.20719, "loss": 0.35797, "time": 0.61034}
{"mode": "train", "epoch": 2, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04607, "loss_rpn_cls": 0.00849, "loss_rpn_bbox": 0.01624, "loss_cls": 0.11694, "acc": 95.49438, "loss_bbox": 0.20521, "loss": 0.34688, "time": 0.61566}
{"mode": "train", "epoch": 2, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.0463, "loss_rpn_cls": 0.00883, "loss_rpn_bbox": 0.0163, "loss_cls": 0.11321, "acc": 95.672, "loss_bbox": 0.19992, "loss": 0.33825, "time": 0.61971}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04661, "loss_rpn_cls": 0.00945, "loss_rpn_bbox": 0.01642, "loss_cls": 0.11798, "acc": 95.32166, "loss_bbox": 0.20212, "loss": 0.34597, "time": 0.61979}
{"mode": "train", "epoch": 2, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04796, "loss_rpn_cls": 0.01101, "loss_rpn_bbox": 0.01581, "loss_cls": 0.11011, "acc": 95.80811, "loss_bbox": 0.19392, "loss": 0.33084, "time": 0.61563}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.79444, "loss_rpn_cls": 0.0077, "loss_rpn_bbox": 0.01544, "loss_cls": 0.1045, "acc": 95.95093, "loss_bbox": 0.19351, "loss": 0.32115, "time": 1.37215}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04557, "loss_rpn_cls": 0.00796, "loss_rpn_bbox": 0.01488, "loss_cls": 0.10552, "acc": 95.95337, "loss_bbox": 0.18789, "loss": 0.31625, "time": 0.617}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04504, "loss_rpn_cls": 0.00849, "loss_rpn_bbox": 0.01632, "loss_cls": 0.10639, "acc": 95.86426, "loss_bbox": 0.1928, "loss": 0.324, "time": 0.60756}
{"mode": "train", "epoch": 3, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04788, "loss_rpn_cls": 0.00709, "loss_rpn_bbox": 0.01532, "loss_cls": 0.10594, "acc": 95.90271, "loss_bbox": 0.19751, "loss": 0.32586, "time": 0.61501}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04757, "loss_rpn_cls": 0.00692, "loss_rpn_bbox": 0.01452, "loss_cls": 0.10271, "acc": 95.94482, "loss_bbox": 0.1814, "loss": 0.30555, "time": 0.60868}
{"mode": "train", "epoch": 3, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04817, "loss_rpn_cls": 0.00707, "loss_rpn_bbox": 0.01474, "loss_cls": 0.10296, "acc": 96.01746, "loss_bbox": 0.1847, "loss": 0.30947, "time": 0.61491}
{"mode": "train", "epoch": 3, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04427, "loss_rpn_cls": 0.00628, "loss_rpn_bbox": 0.01454, "loss_cls": 0.09541, "acc": 96.27258, "loss_bbox": 0.17509, "loss": 0.29131, "time": 0.6114}
{"mode": "train", "epoch": 3, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.0464, "loss_rpn_cls": 0.00764, "loss_rpn_bbox": 0.01596, "loss_cls": 0.0988, "acc": 96.15662, "loss_bbox": 0.18453, "loss": 0.30693, "time": 0.61044}
{"mode": "train", "epoch": 3, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04517, "loss_rpn_cls": 0.00621, "loss_rpn_bbox": 0.0143, "loss_cls": 0.09615, "acc": 96.25671, "loss_bbox": 0.18047, "loss": 0.29715, "time": 0.61116}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04482, "loss_rpn_cls": 0.00565, "loss_rpn_bbox": 0.01357, "loss_cls": 0.08915, "acc": 96.51062, "loss_bbox": 0.17032, "loss": 0.27869, "time": 0.61022}
{"mode": "train", "epoch": 3, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04578, "loss_rpn_cls": 0.0064, "loss_rpn_bbox": 0.01332, "loss_cls": 0.09245, "acc": 96.34033, "loss_bbox": 0.17458, "loss": 0.28675, "time": 0.61541}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.79744, "loss_rpn_cls": 0.00525, "loss_rpn_bbox": 0.01426, "loss_cls": 0.09458, "acc": 96.30981, "loss_bbox": 0.18126, "loss": 0.29536, "time": 1.36539}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04469, "loss_rpn_cls": 0.00524, "loss_rpn_bbox": 0.01371, "loss_cls": 0.09015, "acc": 96.50146, "loss_bbox": 0.17203, "loss": 0.28113, "time": 0.60777}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04541, "loss_rpn_cls": 0.00521, "loss_rpn_bbox": 0.01462, "loss_cls": 0.09386, "acc": 96.31104, "loss_bbox": 0.17796, "loss": 0.29166, "time": 0.62119}
{"mode": "train", "epoch": 4, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04501, "loss_rpn_cls": 0.00558, "loss_rpn_bbox": 0.01371, "loss_cls": 0.09474, "acc": 96.40259, "loss_bbox": 0.17688, "loss": 0.2909, "time": 0.6237}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04777, "loss_rpn_cls": 0.0055, "loss_rpn_bbox": 0.01385, "loss_cls": 0.09157, "acc": 96.38184, "loss_bbox": 0.17696, "loss": 0.28789, "time": 0.60868}
{"mode": "train", "epoch": 4, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04531, "loss_rpn_cls": 0.00559, "loss_rpn_bbox": 0.01382, "loss_cls": 0.09195, "acc": 96.39343, "loss_bbox": 0.16946, "loss": 0.28082, "time": 0.61589}
{"mode": "train", "epoch": 4, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04599, "loss_rpn_cls": 0.00563, "loss_rpn_bbox": 0.01366, "loss_cls": 0.09477, "acc": 96.24451, "loss_bbox": 0.17238, "loss": 0.28644, "time": 0.60824}
{"mode": "train", "epoch": 4, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04665, "loss_rpn_cls": 0.00511, "loss_rpn_bbox": 0.01359, "loss_cls": 0.08685, "acc": 96.53992, "loss_bbox": 0.16957, "loss": 0.27512, "time": 0.61615}
{"mode": "train", "epoch": 4, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04637, "loss_rpn_cls": 0.00563, "loss_rpn_bbox": 0.01447, "loss_cls": 0.09289, "acc": 96.40259, "loss_bbox": 0.17796, "loss": 0.29095, "time": 0.61468}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04485, "loss_rpn_cls": 0.00505, "loss_rpn_bbox": 0.01507, "loss_cls": 0.08996, "acc": 96.45569, "loss_bbox": 0.17473, "loss": 0.28481, "time": 0.61295}
{"mode": "train", "epoch": 4, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04684, "loss_rpn_cls": 0.00552, "loss_rpn_bbox": 0.0148, "loss_cls": 0.09154, "acc": 96.48621, "loss_bbox": 0.1731, "loss": 0.28496, "time": 0.62635}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.78301, "loss_rpn_cls": 0.00434, "loss_rpn_bbox": 0.01341, "loss_cls": 0.0869, "acc": 96.68762, "loss_bbox": 0.16156, "loss": 0.26621, "time": 1.35987}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04519, "loss_rpn_cls": 0.00446, "loss_rpn_bbox": 0.01391, "loss_cls": 0.08856, "acc": 96.49292, "loss_bbox": 0.17576, "loss": 0.28269, "time": 0.60742}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04522, "loss_rpn_cls": 0.00443, "loss_rpn_bbox": 0.0133, "loss_cls": 0.08333, "acc": 96.70044, "loss_bbox": 0.16776, "loss": 0.26881, "time": 0.61365}
{"mode": "train", "epoch": 5, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.05053, "loss_rpn_cls": 0.00408, "loss_rpn_bbox": 0.01186, "loss_cls": 0.07742, "acc": 96.97144, "loss_bbox": 0.15519, "loss": 0.24854, "time": 0.61452}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04561, "loss_rpn_cls": 0.00435, "loss_rpn_bbox": 0.01407, "loss_cls": 0.08559, "acc": 96.5979, "loss_bbox": 0.17085, "loss": 0.27485, "time": 0.61961}
{"mode": "train", "epoch": 5, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04678, "loss_rpn_cls": 0.00611, "loss_rpn_bbox": 0.01344, "loss_cls": 0.08053, "acc": 96.87195, "loss_bbox": 0.16247, "loss": 0.26255, "time": 0.61669}
{"mode": "train", "epoch": 5, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04624, "loss_rpn_cls": 0.00442, "loss_rpn_bbox": 0.01406, "loss_cls": 0.08632, "acc": 96.60217, "loss_bbox": 0.17012, "loss": 0.27492, "time": 0.61607}
{"mode": "train", "epoch": 5, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04596, "loss_rpn_cls": 0.00474, "loss_rpn_bbox": 0.01359, "loss_cls": 0.0837, "acc": 96.64307, "loss_bbox": 0.16702, "loss": 0.26906, "time": 0.61562}
{"mode": "train", "epoch": 5, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04744, "loss_rpn_cls": 0.00459, "loss_rpn_bbox": 0.01215, "loss_cls": 0.08175, "acc": 96.82617, "loss_bbox": 0.15567, "loss": 0.25416, "time": 0.61994}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04781, "loss_rpn_cls": 0.00681, "loss_rpn_bbox": 0.01487, "loss_cls": 0.08997, "acc": 96.46118, "loss_bbox": 0.17569, "loss": 0.28734, "time": 0.61824}
{"mode": "train", "epoch": 5, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04629, "loss_rpn_cls": 0.00505, "loss_rpn_bbox": 0.01366, "loss_cls": 0.0839, "acc": 96.70471, "loss_bbox": 0.16552, "loss": 0.26813, "time": 0.61867}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.7912, "loss_rpn_cls": 0.00372, "loss_rpn_bbox": 0.01302, "loss_cls": 0.07652, "acc": 97.01294, "loss_bbox": 0.15697, "loss": 0.25023, "time": 1.36883}
{"mode": "train", "epoch": 6, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04417, "loss_rpn_cls": 0.00426, "loss_rpn_bbox": 0.01334, "loss_cls": 0.08332, "acc": 96.72913, "loss_bbox": 0.16485, "loss": 0.26578, "time": 0.61372}
{"mode": "train", "epoch": 6, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04759, "loss_rpn_cls": 0.00376, "loss_rpn_bbox": 0.0124, "loss_cls": 0.07921, "acc": 96.88843, "loss_bbox": 0.15796, "loss": 0.25333, "time": 0.61264}
{"mode": "train", "epoch": 6, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04565, "loss_rpn_cls": 0.00476, "loss_rpn_bbox": 0.01372, "loss_cls": 0.08294, "acc": 96.68396, "loss_bbox": 0.17007, "loss": 0.27148, "time": 0.62389}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04434, "loss_rpn_cls": 0.00382, "loss_rpn_bbox": 0.01281, "loss_cls": 0.07603, "acc": 96.97571, "loss_bbox": 0.1584, "loss": 0.25107, "time": 0.61708}
{"mode": "train", "epoch": 6, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04583, "loss_rpn_cls": 0.00331, "loss_rpn_bbox": 0.01264, "loss_cls": 0.07573, "acc": 96.98608, "loss_bbox": 0.15459, "loss": 0.24627, "time": 0.61483}
{"mode": "train", "epoch": 6, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.0474, "loss_rpn_cls": 0.00386, "loss_rpn_bbox": 0.01308, "loss_cls": 0.0773, "acc": 96.94275, "loss_bbox": 0.15779, "loss": 0.25204, "time": 0.62075}
{"mode": "train", "epoch": 6, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04642, "loss_rpn_cls": 0.00337, "loss_rpn_bbox": 0.01236, "loss_cls": 0.08022, "acc": 96.73767, "loss_bbox": 0.16026, "loss": 0.25621, "time": 0.61188}
{"mode": "train", "epoch": 6, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04507, "loss_rpn_cls": 0.00433, "loss_rpn_bbox": 0.01299, "loss_cls": 0.08123, "acc": 96.79504, "loss_bbox": 0.15878, "loss": 0.25734, "time": 0.61066}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04514, "loss_rpn_cls": 0.0035, "loss_rpn_bbox": 0.01424, "loss_cls": 0.0798, "acc": 96.82922, "loss_bbox": 0.16201, "loss": 0.25956, "time": 0.61715}
{"mode": "train", "epoch": 6, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04703, "loss_rpn_cls": 0.00414, "loss_rpn_bbox": 0.01305, "loss_cls": 0.07844, "acc": 96.88965, "loss_bbox": 0.16015, "loss": 0.25579, "time": 0.62048}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.79461, "loss_rpn_cls": 0.00318, "loss_rpn_bbox": 0.01343, "loss_cls": 0.07851, "acc": 96.88599, "loss_bbox": 0.16717, "loss": 0.26228, "time": 1.37165}
{"mode": "train", "epoch": 7, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04444, "loss_rpn_cls": 0.00253, "loss_rpn_bbox": 0.01279, "loss_cls": 0.07056, "acc": 97.19299, "loss_bbox": 0.15248, "loss": 0.23835, "time": 0.60582}
{"mode": "train", "epoch": 7, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.04417, "loss_rpn_cls": 0.00326, "loss_rpn_bbox": 0.01166, "loss_cls": 0.06884, "acc": 97.28577, "loss_bbox": 0.14561, "loss": 0.22937, "time": 0.61924}
{"mode": "train", "epoch": 7, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04376, "loss_rpn_cls": 0.00237, "loss_rpn_bbox": 0.01188, "loss_cls": 0.06944, "acc": 97.19055, "loss_bbox": 0.15026, "loss": 0.23395, "time": 0.6091}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04536, "loss_rpn_cls": 0.00371, "loss_rpn_bbox": 0.013, "loss_cls": 0.07611, "acc": 96.97754, "loss_bbox": 0.15653, "loss": 0.24935, "time": 0.61243}
{"mode": "train", "epoch": 7, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04515, "loss_rpn_cls": 0.0034, "loss_rpn_bbox": 0.0124, "loss_cls": 0.07024, "acc": 97.19971, "loss_bbox": 0.15114, "loss": 0.23719, "time": 0.61016}
{"mode": "train", "epoch": 7, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04412, "loss_rpn_cls": 0.00292, "loss_rpn_bbox": 0.01184, "loss_cls": 0.06902, "acc": 97.26135, "loss_bbox": 0.14523, "loss": 0.229, "time": 0.60641}
{"mode": "train", "epoch": 7, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04488, "loss_rpn_cls": 0.00343, "loss_rpn_bbox": 0.01396, "loss_cls": 0.07856, "acc": 96.87866, "loss_bbox": 0.16327, "loss": 0.25923, "time": 0.61058}
{"mode": "train", "epoch": 7, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04636, "loss_rpn_cls": 0.00301, "loss_rpn_bbox": 0.01236, "loss_cls": 0.06928, "acc": 97.2229, "loss_bbox": 0.14887, "loss": 0.23352, "time": 0.61562}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04556, "loss_rpn_cls": 0.00325, "loss_rpn_bbox": 0.01288, "loss_cls": 0.07561, "acc": 96.95557, "loss_bbox": 0.15792, "loss": 0.24966, "time": 0.6172}
{"mode": "train", "epoch": 7, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.04556, "loss_rpn_cls": 0.00314, "loss_rpn_bbox": 0.01337, "loss_cls": 0.07821, "acc": 96.88965, "loss_bbox": 0.1621, "loss": 0.25683, "time": 0.61094}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 0.01, "memory": 7145, "data_time": 0.79264, "loss_rpn_cls": 0.00265, "loss_rpn_bbox": 0.01217, "loss_cls": 0.0664, "acc": 97.35657, "loss_bbox": 0.14355, "loss": 0.22477, "time": 1.36026}
{"mode": "train", "epoch": 8, "iter": 20, "lr": 0.01, "memory": 7145, "data_time": 0.04664, "loss_rpn_cls": 0.00257, "loss_rpn_bbox": 0.01219, "loss_cls": 0.07103, "acc": 97.1283, "loss_bbox": 0.14949, "loss": 0.23528, "time": 0.61512}
{"mode": "train", "epoch": 8, "iter": 30, "lr": 0.01, "memory": 7145, "data_time": 0.0472, "loss_rpn_cls": 0.00226, "loss_rpn_bbox": 0.0119, "loss_cls": 0.06822, "acc": 97.27783, "loss_bbox": 0.14551, "loss": 0.22789, "time": 0.61451}
{"mode": "train", "epoch": 8, "iter": 40, "lr": 0.01, "memory": 7145, "data_time": 0.04802, "loss_rpn_cls": 0.0033, "loss_rpn_bbox": 0.01291, "loss_cls": 0.07388, "acc": 96.98975, "loss_bbox": 0.15739, "loss": 0.24749, "time": 0.62049}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.01, "memory": 7145, "data_time": 0.04745, "loss_rpn_cls": 0.00244, "loss_rpn_bbox": 0.01308, "loss_cls": 0.07013, "acc": 97.19177, "loss_bbox": 0.14796, "loss": 0.23361, "time": 0.61241}
{"mode": "train", "epoch": 8, "iter": 60, "lr": 0.01, "memory": 7145, "data_time": 0.04518, "loss_rpn_cls": 0.00245, "loss_rpn_bbox": 0.01161, "loss_cls": 0.06858, "acc": 97.23083, "loss_bbox": 0.14545, "loss": 0.22809, "time": 0.60716}
{"mode": "train", "epoch": 8, "iter": 70, "lr": 0.01, "memory": 7145, "data_time": 0.04554, "loss_rpn_cls": 0.00182, "loss_rpn_bbox": 0.01209, "loss_cls": 0.06545, "acc": 97.38403, "loss_bbox": 0.1437, "loss": 0.22305, "time": 0.61242}
{"mode": "train", "epoch": 8, "iter": 80, "lr": 0.01, "memory": 7145, "data_time": 0.04877, "loss_rpn_cls": 0.00278, "loss_rpn_bbox": 0.01231, "loss_cls": 0.0698, "acc": 97.21191, "loss_bbox": 0.14878, "loss": 0.23367, "time": 0.61215}
{"mode": "train", "epoch": 8, "iter": 90, "lr": 0.01, "memory": 7145, "data_time": 0.04881, "loss_rpn_cls": 0.00253, "loss_rpn_bbox": 0.01235, "loss_cls": 0.06831, "acc": 97.23267, "loss_bbox": 0.14553, "loss": 0.22873, "time": 0.61623}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.01, "memory": 7145, "data_time": 0.04838, "loss_rpn_cls": 0.00257, "loss_rpn_bbox": 0.01292, "loss_cls": 0.07173, "acc": 97.08618, "loss_bbox": 0.15195, "loss": 0.23916, "time": 0.61184}
{"mode": "train", "epoch": 8, "iter": 110, "lr": 0.01, "memory": 7145, "data_time": 0.0483, "loss_rpn_cls": 0.00245, "loss_rpn_bbox": 0.01154, "loss_cls": 0.06405, "acc": 97.40845, "loss_bbox": 0.13861, "loss": 0.21665, "time": 0.61456}
{"mode": "train", "epoch": 9, "iter": 10, "lr": 0.001, "memory": 7145, "data_time": 0.78831, "loss_rpn_cls": 0.00197, "loss_rpn_bbox": 0.01109, "loss_cls": 0.06022, "acc": 97.61475, "loss_bbox": 0.13478, "loss": 0.20805, "time": 1.3667}
{"mode": "train", "epoch": 9, "iter": 20, "lr": 0.001, "memory": 7145, "data_time": 0.04548, "loss_rpn_cls": 0.00242, "loss_rpn_bbox": 0.01209, "loss_cls": 0.06672, "acc": 97.28516, "loss_bbox": 0.14399, "loss": 0.22522, "time": 0.60755}
{"mode": "train", "epoch": 9, "iter": 30, "lr": 0.001, "memory": 7145, "data_time": 0.04697, "loss_rpn_cls": 0.00166, "loss_rpn_bbox": 0.01075, "loss_cls": 0.05961, "acc": 97.61292, "loss_bbox": 0.13406, "loss": 0.20608, "time": 0.61675}
{"mode": "train", "epoch": 9, "iter": 40, "lr": 0.001, "memory": 7145, "data_time": 0.04597, "loss_rpn_cls": 0.00184, "loss_rpn_bbox": 0.01028, "loss_cls": 0.05637, "acc": 97.76917, "loss_bbox": 0.12432, "loss": 0.19279, "time": 0.62296}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.001, "memory": 7145, "data_time": 0.04754, "loss_rpn_cls": 0.00203, "loss_rpn_bbox": 0.01152, "loss_cls": 0.0631, "acc": 97.45667, "loss_bbox": 0.13536, "loss": 0.21201, "time": 0.62392}
{"mode": "train", "epoch": 9, "iter": 60, "lr": 0.001, "memory": 7145, "data_time": 0.04689, "loss_rpn_cls": 0.0022, "loss_rpn_bbox": 0.01208, "loss_cls": 0.06571, "acc": 97.33093, "loss_bbox": 0.14512, "loss": 0.22511, "time": 0.62668}
{"mode": "train", "epoch": 9, "iter": 70, "lr": 0.001, "memory": 7145, "data_time": 0.04723, "loss_rpn_cls": 0.00172, "loss_rpn_bbox": 0.01119, "loss_cls": 0.06145, "acc": 97.52747, "loss_bbox": 0.13466, "loss": 0.20901, "time": 0.62084}
{"mode": "train", "epoch": 9, "iter": 80, "lr": 0.001, "memory": 7145, "data_time": 0.04686, "loss_rpn_cls": 0.0021, "loss_rpn_bbox": 0.01202, "loss_cls": 0.06332, "acc": 97.45422, "loss_bbox": 0.14178, "loss": 0.21922, "time": 0.61938}
{"mode": "train", "epoch": 9, "iter": 90, "lr": 0.001, "memory": 7145, "data_time": 0.04812, "loss_rpn_cls": 0.00149, "loss_rpn_bbox": 0.01039, "loss_cls": 0.05811, "acc": 97.64099, "loss_bbox": 0.1289, "loss": 0.19889, "time": 0.61606}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.001, "memory": 7145, "data_time": 0.04786, "loss_rpn_cls": 0.0021, "loss_rpn_bbox": 0.01194, "loss_cls": 0.06542, "acc": 97.37671, "loss_bbox": 0.14313, "loss": 0.22259, "time": 0.61293}
{"mode": "train", "epoch": 9, "iter": 110, "lr": 0.001, "memory": 7145, "data_time": 0.04745, "loss_rpn_cls": 0.00229, "loss_rpn_bbox": 0.01025, "loss_cls": 0.05644, "acc": 97.71362, "loss_bbox": 0.12809, "loss": 0.19707, "time": 0.61976}
{"mode": "train", "epoch": 10, "iter": 10, "lr": 0.001, "memory": 7145, "data_time": 0.78204, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.01091, "loss_cls": 0.06261, "acc": 97.48901, "loss_bbox": 0.13498, "loss": 0.21031, "time": 1.36489}
{"mode": "train", "epoch": 10, "iter": 20, "lr": 0.001, "memory": 7145, "data_time": 0.04511, "loss_rpn_cls": 0.00186, "loss_rpn_bbox": 0.01116, "loss_cls": 0.05975, "acc": 97.55676, "loss_bbox": 0.1342, "loss": 0.20697, "time": 0.61457}
{"mode": "train", "epoch": 10, "iter": 30, "lr": 0.001, "memory": 7145, "data_time": 0.04662, "loss_rpn_cls": 0.00187, "loss_rpn_bbox": 0.01006, "loss_cls": 0.05885, "acc": 97.6416, "loss_bbox": 0.13138, "loss": 0.20216, "time": 0.61253}
{"mode": "train", "epoch": 10, "iter": 40, "lr": 0.001, "memory": 7145, "data_time": 0.04445, "loss_rpn_cls": 0.0016, "loss_rpn_bbox": 0.01079, "loss_cls": 0.05934, "acc": 97.5824, "loss_bbox": 0.12865, "loss": 0.20038, "time": 0.62304}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.001, "memory": 7145, "data_time": 0.04918, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.0116, "loss_cls": 0.0608, "acc": 97.59338, "loss_bbox": 0.13355, "loss": 0.20777, "time": 0.61943}
{"mode": "train", "epoch": 10, "iter": 60, "lr": 0.001, "memory": 7145, "data_time": 0.04979, "loss_rpn_cls": 0.00219, "loss_rpn_bbox": 0.01132, "loss_cls": 0.06204, "acc": 97.48047, "loss_bbox": 0.13693, "loss": 0.21248, "time": 0.61571}
{"mode": "train", "epoch": 10, "iter": 70, "lr": 0.001, "memory": 7145, "data_time": 0.04527, "loss_rpn_cls": 0.00166, "loss_rpn_bbox": 0.01131, "loss_cls": 0.06032, "acc": 97.5647, "loss_bbox": 0.13953, "loss": 0.21282, "time": 0.61409}
{"mode": "train", "epoch": 10, "iter": 80, "lr": 0.001, "memory": 7145, "data_time": 0.04549, "loss_rpn_cls": 0.00193, "loss_rpn_bbox": 0.01137, "loss_cls": 0.06065, "acc": 97.59521, "loss_bbox": 0.13638, "loss": 0.21034, "time": 0.61886}
{"mode": "train", "epoch": 10, "iter": 90, "lr": 0.001, "memory": 7145, "data_time": 0.04465, "loss_rpn_cls": 0.00173, "loss_rpn_bbox": 0.01072, "loss_cls": 0.0604, "acc": 97.58423, "loss_bbox": 0.13323, "loss": 0.20608, "time": 0.62037}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.001, "memory": 7145, "data_time": 0.04661, "loss_rpn_cls": 0.00214, "loss_rpn_bbox": 0.01111, "loss_cls": 0.06094, "acc": 97.57935, "loss_bbox": 0.13439, "loss": 0.20859, "time": 0.61945}
{"mode": "train", "epoch": 10, "iter": 110, "lr": 0.001, "memory": 7145, "data_time": 0.04892, "loss_rpn_cls": 0.00216, "loss_rpn_bbox": 0.01046, "loss_cls": 0.05876, "acc": 97.69958, "loss_bbox": 0.1277, "loss": 0.19908, "time": 0.61672}
{"mode": "train", "epoch": 11, "iter": 10, "lr": 0.001, "memory": 7145, "data_time": 0.7842, "loss_rpn_cls": 0.00205, "loss_rpn_bbox": 0.01051, "loss_cls": 0.05618, "acc": 97.76184, "loss_bbox": 0.1281, "loss": 0.19684, "time": 1.357}
{"mode": "train", "epoch": 11, "iter": 20, "lr": 0.001, "memory": 7145, "data_time": 0.04496, "loss_rpn_cls": 0.00244, "loss_rpn_bbox": 0.01087, "loss_cls": 0.05851, "acc": 97.72766, "loss_bbox": 0.12912, "loss": 0.20094, "time": 0.61058}
{"mode": "train", "epoch": 11, "iter": 30, "lr": 0.001, "memory": 7145, "data_time": 0.04612, "loss_rpn_cls": 0.0022, "loss_rpn_bbox": 0.01067, "loss_cls": 0.05847, "acc": 97.71118, "loss_bbox": 0.13104, "loss": 0.20239, "time": 0.61754}
{"mode": "train", "epoch": 11, "iter": 40, "lr": 0.001, "memory": 7145, "data_time": 0.0462, "loss_rpn_cls": 0.00167, "loss_rpn_bbox": 0.01223, "loss_cls": 0.06164, "acc": 97.50183, "loss_bbox": 0.14248, "loss": 0.21803, "time": 0.61764}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.001, "memory": 7145, "data_time": 0.04525, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.01049, "loss_cls": 0.06108, "acc": 97.54395, "loss_bbox": 0.13183, "loss": 0.20522, "time": 0.6172}
{"mode": "train", "epoch": 11, "iter": 60, "lr": 0.001, "memory": 7145, "data_time": 0.04592, "loss_rpn_cls": 0.00128, "loss_rpn_bbox": 0.01087, "loss_cls": 0.05837, "acc": 97.66968, "loss_bbox": 0.1321, "loss": 0.20261, "time": 0.61737}
{"mode": "train", "epoch": 11, "iter": 70, "lr": 0.001, "memory": 7145, "data_time": 0.04526, "loss_rpn_cls": 0.00163, "loss_rpn_bbox": 0.01096, "loss_cls": 0.06062, "acc": 97.57141, "loss_bbox": 0.13381, "loss": 0.20702, "time": 0.61622}
{"mode": "train", "epoch": 11, "iter": 80, "lr": 0.001, "memory": 7145, "data_time": 0.04434, "loss_rpn_cls": 0.00154, "loss_rpn_bbox": 0.0104, "loss_cls": 0.05954, "acc": 97.62573, "loss_bbox": 0.13503, "loss": 0.20651, "time": 0.61721}
{"mode": "train", "epoch": 11, "iter": 90, "lr": 0.001, "memory": 7145, "data_time": 0.04786, "loss_rpn_cls": 0.00186, "loss_rpn_bbox": 0.0112, "loss_cls": 0.0587, "acc": 97.63428, "loss_bbox": 0.13368, "loss": 0.20544, "time": 0.62509}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.001, "memory": 7145, "data_time": 0.04494, "loss_rpn_cls": 0.00187, "loss_rpn_bbox": 0.01079, "loss_cls": 0.0583, "acc": 97.66235, "loss_bbox": 0.12526, "loss": 0.19622, "time": 0.61802}
{"mode": "train", "epoch": 11, "iter": 110, "lr": 0.001, "memory": 7145, "data_time": 0.04623, "loss_rpn_cls": 0.0016, "loss_rpn_bbox": 0.01021, "loss_cls": 0.05925, "acc": 97.64832, "loss_bbox": 0.13197, "loss": 0.20305, "time": 0.63288}
{"mode": "train", "epoch": 12, "iter": 10, "lr": 0.0001, "memory": 7145, "data_time": 0.78352, "loss_rpn_cls": 0.00205, "loss_rpn_bbox": 0.0108, "loss_cls": 0.0607, "acc": 97.55493, "loss_bbox": 0.13606, "loss": 0.20961, "time": 1.35311}
{"mode": "train", "epoch": 12, "iter": 20, "lr": 0.0001, "memory": 7145, "data_time": 0.04409, "loss_rpn_cls": 0.002, "loss_rpn_bbox": 0.01105, "loss_cls": 0.0602, "acc": 97.57751, "loss_bbox": 0.13126, "loss": 0.20451, "time": 0.61317}
{"mode": "train", "epoch": 12, "iter": 30, "lr": 0.0001, "memory": 7145, "data_time": 0.0454, "loss_rpn_cls": 0.00155, "loss_rpn_bbox": 0.00921, "loss_cls": 0.05, "acc": 97.95166, "loss_bbox": 0.11596, "loss": 0.17671, "time": 0.60695}
{"mode": "train", "epoch": 12, "iter": 40, "lr": 0.0001, "memory": 7145, "data_time": 0.04652, "loss_rpn_cls": 0.00199, "loss_rpn_bbox": 0.01076, "loss_cls": 0.05659, "acc": 97.69714, "loss_bbox": 0.12776, "loss": 0.1971, "time": 0.61273}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0001, "memory": 7145, "data_time": 0.04489, "loss_rpn_cls": 0.00224, "loss_rpn_bbox": 0.01127, "loss_cls": 0.0603, "acc": 97.62878, "loss_bbox": 0.13432, "loss": 0.20813, "time": 0.61511}
{"mode": "train", "epoch": 12, "iter": 60, "lr": 0.0001, "memory": 7145, "data_time": 0.04601, "loss_rpn_cls": 0.0014, "loss_rpn_bbox": 0.0103, "loss_cls": 0.05579, "acc": 97.78931, "loss_bbox": 0.1239, "loss": 0.19139, "time": 0.62042}
{"mode": "train", "epoch": 12, "iter": 70, "lr": 0.0001, "memory": 7145, "data_time": 0.04671, "loss_rpn_cls": 0.00207, "loss_rpn_bbox": 0.01037, "loss_cls": 0.05732, "acc": 97.71423, "loss_bbox": 0.13019, "loss": 0.19995, "time": 0.61424}
{"mode": "train", "epoch": 12, "iter": 80, "lr": 0.0001, "memory": 7145, "data_time": 0.0467, "loss_rpn_cls": 0.00196, "loss_rpn_bbox": 0.01133, "loss_cls": 0.0617, "acc": 97.58484, "loss_bbox": 0.13567, "loss": 0.21065, "time": 0.62021}
{"mode": "train", "epoch": 12, "iter": 90, "lr": 0.0001, "memory": 7145, "data_time": 0.04781, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.01091, "loss_cls": 0.0563, "acc": 97.71606, "loss_bbox": 0.12999, "loss": 0.19902, "time": 0.61936}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0001, "memory": 7145, "data_time": 0.04741, "loss_rpn_cls": 0.00139, "loss_rpn_bbox": 0.01077, "loss_cls": 0.05732, "acc": 97.72156, "loss_bbox": 0.13143, "loss": 0.2009, "time": 0.62736}
{"mode": "train", "epoch": 12, "iter": 110, "lr": 0.0001, "memory": 7145, "data_time": 0.0495, "loss_rpn_cls": 0.00207, "loss_rpn_bbox": 0.01132, "loss_cls": 0.05973, "acc": 97.64038, "loss_bbox": 0.13491, "loss": 0.20804, "time": 0.6206}
{"mode": "val", "epoch": 12, "iter": 116, "lr": 0.0001, "AP50": 0.681, "mAP": 0.68141}
